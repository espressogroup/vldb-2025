
# The following lines enable authentication.
# Note GaianDB system data such as API stored procedures is kept under the 'gaiandb' schema.

#derby.authentication.provider=BUILTIN
derby.authentication.provider=com.ibm.gaiandb.GaianAuthenticator
derby.connection.requireAuthentication=TRUE

# Set your userid/password combination here. It is recommended NOT to set the password for Gaian here.
# It is recommended to set Gaian's password in gaiandb_config.properties (as Gaian will obfuscate it in there), property: GAIAN_NODE_PWD

#derby.user.gaiandb=passw0rd
#derby.user.myusr=mypwd


# The 'noAccess' default setting below has the impact of restricting access by all users to the databases which they have been given explicit access to.
# Access must be given in advance via Derby procedure call, e.g: CALL SYSCS_UTIL.SYSCS_SET_DATABASE_PROPERTY('derby.database.fullAccessUsers', 'GAIANDB')
# A GaianDB install includes a 'GAIANDB' database against which we have already called this procedure to allow access by user GAIANDB.
# GAIANDB also calls this procedure automatically if it needs to re-create its own database on startup.

#derby.database.defaultConnectionMode=noAccess

# Property 'derby.database.sqlAuthorization' enforces schema privacy, meaning you need to GRANT access to tables in schemas that were created by other users.
# This is a more granular method for restricting access to data than using 'derby.database.defaultConnectionMode' and 'derby.database.fullAccessUsers'.
# Note that once this property is set to TRUE, it cannot subsequently be reversed (setting it back to FALSE or commenting it out will have no effect).

#derby.database.sqlAuthorization=TRUE

# Property 'derby.drda.sslMode' enables SSL encryption of client connections. Valid values are: [ off | basic | peerAuthentication ]
# A Key pair is required on the server for SSL to work. Below are example commands to generate one:
#	1) Short command which prompts for missing fields => keytool -genkey -alias derbyServerKey -keystore ./.keyStore
#	2) Full command, with no user prompts:
#		keytool -genkey -dname "CN=<common name>, OU=<organisation unit, O=<organisation>, L=<locality/city>, S=<state>, C=<country>"
#		-alias derbyServerKey -keypass passw0rd -keystore ./.keyStore -storepass passw0rd
# At startup, Gaian will use the following default values for keyStore file name and password:
#	keyStore file:		 <GAIAN_WORKSPACE>/.keyStore
#	keyStore password:	 Gaian system user password, e.g: passw0rd
# You can also override these by editing variable JAVA_OPTS in launchGaianServer.sh(/.bat), e.g:
# 	[[ -z $JAVA_OPTS ]] && JAVA_OPTS="-Xmx256m -Djavax.net.ssl.keyStore=~/.myKeyStore -Djavax.net.ssl.keyStorePassword=myKeyStorePwd"
#
# Clients wishing to connect to an SSL node must specify argument "ssl=basic" or "ssl=peerAuthentication" in their JDBC URL

#derby.drda.sslMode=basic

